<?php

namespace tests\Unit\App\MovieReview;

use App\MovieReview\ClassifiedReview;
use App\MovieReview\ReviewAnalyzer;
use App\MovieReview\ReviewDataObjectsFactory;
use Tests\TestCase;

class ReviewAnalyzerTest extends TestCase
{
    /**
     * @var ReviewAnalyzer
     */
    protected $analyzer;

    protected function setUp()
    {
        $this->analyzer =
            new ReviewAnalyzer($this->mockReviewDataObjectsFactory());

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    protected function tearDown()
    {
        unset($this->analyzer);

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    /**
     * @return ReviewDataObjectsFactory
     */
    protected function mockReviewDataObjectsFactory()
    {
        $factory = \Mockery::mock(ReviewDataObjectsFactory::class);

        $factory
            ->shouldReceive('makeUsingClassifierOutput')
            ->andReturn($this->mockClassifiedReview());

        return $factory;
    }

    /**
     * @return ClassifiedReview
     */
    protected function mockClassifiedReview()
    {
        $classifiedReview = \Mockery::mock(ClassifiedReview::class);

        $classifiedReview
            ->shouldReceive('setProvidedReviewText')
            ->andReturn('Some text');

        $classifiedReview
            ->shouldReceive('setPredictedClass')
            ->andReturn(true);

        $classifiedReview
            ->shouldReceive('setPredictedProbability')
            ->andReturn(80.33);

        return $classifiedReview;
    }

    public function testThatAnalyzerClassifyMethodReturnsClassifiedReviewData()
    {
        $this->assertInstanceOf(
            ClassifiedReview::class,
            $this->analyzer->classify('Dummy text')
        );
    }
}
